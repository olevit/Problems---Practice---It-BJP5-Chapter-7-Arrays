/* Write a method isPalindrome that accepts an array of Strings as its argument and returns
true if that array is a palindrome (if it reads the same forwards as backwards) and false if not.
For example, the array {"alpha", "beta", "gamma", "delta", "gamma", "beta", "alpha"} is a palindrome,
so passing that array to your method would return true. Arrays with zero or one element are considered
to be palindromes. */

//this is my first solution of this problem
  public static boolean isPalindrome(String[] data) {
    if(data.length < 2)
       return true;
    for(int i = 0; i < data.length / 2; i++){
        if(data[i] != data[data.length - i - 1])
            break;
        return true;
    }
    return false;
}


//this is my second solution of this problem
if(data.length < 2)
       return true;
    int n = 0;
    for(int i = 0; i < data.length / 2; i++){
        if(data[i] == data[data.length - i - 1])
            n++;
    }
    if(n == data.length / 2)
        return true;
    return false;
}


//this is my third solution to this problem
public static boolean isPalindrome(String[] data) {
    if(data.length < 2)
       return true;
    for(int i = 0; i < data.length / 2; i++){
        if(data[i] != data[data.length - i - 1])
            return false;
    }
    return true;
}
